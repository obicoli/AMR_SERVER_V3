import{DatetimeUnits}from"@fusioncharts/utils/src/datetime-enums";import getValidBin from"./validate-binsize";var getFormatStore=function getFormatStore(specifier){if(specifier===void 0){specifier=""}var timeUnits=[],store={};if(/%[_ -]?[cfLQ]/.test(specifier)){timeUnits.push(DatetimeUnits.Millisecond);store[DatetimeUnits.Millisecond.name]={}}if(/%[_ -]?[sSX]/.test(specifier)){timeUnits.push(DatetimeUnits.Second);store[DatetimeUnits.Second.name]={}}if(/%[_ -]?M/.test(specifier)){timeUnits.push(DatetimeUnits.Minute);store[DatetimeUnits.Minute.name]={}}if(/%[_ -]?[HI]/.test(specifier)){timeUnits.push(DatetimeUnits.Hour);store[DatetimeUnits.Hour.name]={}}if(/%[_ -]?[dejuwx]/.test(specifier)){timeUnits.push(DatetimeUnits.Day);store[DatetimeUnits.Day.name]={}}if(/%[_ -]?[bBm]/.test(specifier)){timeUnits.push(DatetimeUnits.Month);store[DatetimeUnits.Month.name]={}}if(/%[_ -]?[yY]/.test(specifier)){timeUnits.push(DatetimeUnits.Year);store[DatetimeUnits.Year.name]={}}return{timeUnits:timeUnits,store:store}},getAtomicity=function getAtomicity(_ref){var _ref$timeUnits=_ref.timeUnits,timeUnits=_ref$timeUnits===void 0?[]:_ref$timeUnits,_ref$store=_ref.store,store=_ref$store===void 0?{}:_ref$store,index=_ref.index,_ref$data=_ref.data,data=_ref$data===void 0?[]:_ref$data,bins=_ref.bins,intervalIndexMap=_ref.intervalIndexMap;var i,diff,prevDate,currentDate,bin,count,minInfo={count:0},multipliersCountMap,len=data.length;if(!timeUnits.length){return[]}if(len===1||len===0){return[timeUnits[0].ms,1,timeUnits[0].ms]}timeUnits.forEach((function(unit){var unitName=unit.name,intervals=store[unitName];if(!intervals)return;Object.keys(intervals).forEach((function(interval){var intervalCount=intervals[interval];if(minInfo.count<=intervalCount){minInfo.count=intervalCount;Object.assign(minInfo,{multiplier:Number(interval),unit:{name:unitName,ms:bins[intervalIndexMap[unitName.toLowerCase()]][2]}})}}))}));for(i=1;i<len;++i){prevDate=data[i-1][index];currentDate=data[i][index];diff=currentDate-prevDate;if(!diff)continue;bin=getValidBin(bins,intervalIndexMap,timeUnits,diff);multipliersCountMap=store[bin.unit.name];if(!multipliersCountMap[bin.multiplier]){multipliersCountMap[bin.multiplier]=0}count=++multipliersCountMap[bin.multiplier];if(minInfo.count<count||minInfo.count===count&&minInfo.unit.ms*minInfo.multiplier>bin.unit.ms*bin.multiplier){minInfo.count=count;Object.assign(minInfo,bin)}}return minInfo.count?[minInfo.unit.ms,minInfo.multiplier,minInfo.multiplier*minInfo.unit.ms]:[timeUnits[0].ms,1,timeUnits[0].ms]};export{getAtomicity,getFormatStore};