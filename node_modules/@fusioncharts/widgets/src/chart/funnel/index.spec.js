import*as chartData from"../../../../../smoke-test/test-data/data-by-chart";import CommonTests from"../../../../../smoke-test/test-sanity/common.sanity";import chartValidator from"../../../../../smoke-test/test-sanity/funnel.sanity";import{CONTAINER_ID,getSVG,initDimensions,resizeDimensions,setup}from"../../../../../smoke-test/test-sanity/utility";import{extend2}from"../../../../fc-core/src/lib/";import ignoreCaseExt from"../../../../fc-features/src/ignore-case-ext";import FusionCharts from"../../../../fusioncharts/core";import chartType from"./index";FusionCharts.addDep(chartType);FusionCharts.addDep(ignoreCaseExt);var svgElement,chartName=chartType.getName(),chartID=chartName.toLowerCase(),doc=window.document;var containerID="chart-container",domSetup=function domSetup(){if(!document.getElementById(containerID)){var ele=document.createElement("div");ele.setAttribute("id",containerID);document.body.prepend(ele)}},domTeardown=function domTeardown(){var ele=document.getElementById(containerID);if(ele)document.body.removeChild(ele)};describe("Running common chart tests for "+chartName,(function(){var chart={type:chartID,renderAt:CONTAINER_ID,width:initDimensions.width,height:initDimensions.height,dataFormat:"json",dataSource:{}},config={chartID:chartID,chart:chart,document:doc,chartWrapperId:CONTAINER_ID};CommonTests.forEach((function(test){var itArr;if(test.name&&test.run){it(test.name,(function(done){test.run(config,(function(result){expect(result).toBe(true);done()}))}))}else if(test.iterator){itArr=test.iterator(chart);itArr.forEach((function(subTest){it(subTest.name,(function(done){subTest.run(config,(function(result){expect(result).toBe(true);done()}))}))}))}}))}));describe("Chart basic testing: "+chartName,(function(){var chart,chartObj,itResize,renderData=chartValidator.BASIC.newChart,updateData=chartValidator.BASIC.updateChart;chart={type:chartID,renderAt:CONTAINER_ID};extend2(chart,renderData);chart.dataSource=chart.dataSource?chart.dataSource:chartData[chartID]["default"];chart.dataSource.chart.animation="0";beforeEach((function(){chartObj=setup(FusionCharts,chart)}));afterEach((function(){if(chartObj&&!chartObj.disposed)chartObj.dispose()}));it("Rendered chart validation passes",(function(done){expect(chartObj).toBeDefined();var renderComplete=function renderComplete(){var response=chartValidator.BASIC.validate(chartObj);expect(response.flag).toBe(true,response.messages.join(" && "));done()};chartObj.render();chartObj.addEventListener("renderComplete",renderComplete)}));it("Chart update passes",(function(done){expect(chartObj).toBeDefined();var called=0;var renderComplete=function renderComplete(){if(called===0){called++;chartObj.setChartData(updateData||chart.dataSource,"json")}else if(called===1){var response=chartValidator.BASIC.updateValidate(chartObj);expect(response.flag).toBe(true,response.messages.join(" && "));done()}};chartObj.addEventListener("renderComplete",renderComplete);chartObj.render()}));itResize=function itResize(resizeDimensions){it("Chart resize passes for "+resizeDimensions.width+" x "+resizeDimensions.height,(function(done){expect(chartObj).toBeDefined();var renderComplete=function renderComplete(){var response=chartValidator.BASIC.resizeValidate(chartObj);expect(response.flag).toBe(true,response.messages.join(" && "));done()};chartObj.addEventListener("renderComplete",renderComplete);chartObj.render((function(){chartObj.resizeTo(resizeDimensions.width,resizeDimensions.height)}))}))};for(var index=0;index<resizeDimensions.length;index++){itResize(resizeDimensions[index])}}));describe("Chart EI testing: "+chartType.getName(),(function(){var chart,chartObj,eiMethods,renderData=chartValidator.EI.newChart;chart={type:chartID,renderAt:CONTAINER_ID};extend2(chart,renderData);chart.dataSource=chart.dataSource?chart.dataSource:chartData[chartID]["default"];chart.dataSource.chart.animation="0";beforeEach((function(){chartObj=setup(FusionCharts,chart)}));afterEach((function(){if(chartObj&&!chartObj.disposed)chartObj.dispose()}));eiMethods=function eiMethods(methodObj){it(methodObj.name,(function(done){expect(chartObj).toBeDefined();var renderComplete=function renderComplete(){svgElement=getSVG(chartObj);methodObj.fn(svgElement,chartObj,(function(result){expect(result).toBe(true);done()}))};chartObj.addEventListener("renderComplete",renderComplete);chartObj.render()}))};for(var key in chartValidator.EI.methods){if(chartValidator.EI.methods.hasOwnProperty(key)){eiMethods(chartValidator.EI.methods[key])}}}));describe("Text outline testing "+chartName,(function(){var chart,chartObj,itResize,renderData={chart:{caption:"Conversion Ratio",subcaption:"May 2007",textoutline:"1",animation:"1"},data:[{label:"Website Visits",value:"385634"},{label:"Downloads",value:"175631"},{label:"Interested to buy",value:"84564"}]},updateDataWithNoOutline={chart:{caption:"Conversion Ratio",subcaption:"May 2007",animation:"1"},data:[{label:"Website Visits",value:"385634"},{label:"Downloads",value:"175631"},{label:"Interested to buy",value:"84564"}]};chart={type:chartID,renderAt:CONTAINER_ID,dataSource:renderData};beforeEach((function(){chartObj=setup(FusionCharts,chart)}));afterEach((function(){if(chartObj&&!chartObj.disposed)chartObj.dispose()}));it("Text outline should get applied",(function(done){var renderComplete=function renderComplete(){var labelElement=document.querySelector('[class$="datalabel').getElementsByTagName("text")[0];expect(labelElement.getAttribute("filter")).not.toBe(null);done()};chartObj.addEventListener("renderComplete",renderComplete);chartObj.render()}));it("Text outline should be removed",(function(done){var updateFlag=0,renderComplete=function renderComplete(){if(!updateFlag){updateFlag=1;chartObj.setJSONData(updateDataWithNoOutline)}else{var labelElement=document.querySelector('[class$="datalabel').getElementsByTagName("text")[0];expect(labelElement.getAttribute("filter")).toBe(null);done()}};chartObj.addEventListener("renderComplete",renderComplete);chartObj.render()}))}));describe("A funnel chart",(function(){beforeEach(domSetup);afterEach(domTeardown);var label="A",value=385634,getData=function getData(ob){if(ob===void 0){ob={}}return{type:"funnel",renderAt:containerID,dataSource:{chart:Object.assign({},{animation:false},ob),data:[{label:label,value:value},{label:label,value:value},{label:label,value:value},{label:label,value:value},{label:label,value:value}]}}};it("should, by default, draw point labels with values",(function(done){var chart=new FusionCharts(getData({showValues:true}));chart.addEventListener("rendercomplete",(function(e){e.detachHandler();Array.from(document.querySelectorAll("[class$=-datalabel] > text")).forEach((function(_ref){var textContent=_ref.textContent;return expect(textContent).toBe("A, 385.63K")}));e.sender.dispose()}));chart.addEventListener("disposed",done);chart.render()}));it("should draw only point labels when show values is false",(function(done){var chart=new FusionCharts(getData({showValues:false}));chart.addEventListener("rendercomplete",(function(e){e.detachHandler();Array.from(document.querySelectorAll("[class$=-datalabel] > text")).forEach((function(_ref2){var textContent=_ref2.textContent;return expect(textContent).toBe("A")}));e.sender.dispose()}));chart.addEventListener("disposed",done);chart.render()}))}));